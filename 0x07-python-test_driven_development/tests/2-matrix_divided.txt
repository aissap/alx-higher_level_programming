# Test cases for matrix_divided function

Valid Input
===========

# Test Case 1
>>> matrix = [
	[3, 6, 9],
	[12, 15, 18]
	]
>>> matrix_divided(matrix, 3)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

# Test Case 2
>>> matrix = [
	[1, 2, 3],
	[4, 5, 6]
	]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test Case 3
>>> matrix = [
	[1.1, -2.2, 3.3],
	[4.4, 5.5, -6.6]
	]
>>> matrix_divided(matrix, 3)
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

# Test Case 4
>>> matrix = [
	[1, -2.2, 3, 4.4, 5],
	[-6.6, 7.00, 8, 9.999, 10]
	]
>>> matrix_divided(matrix, 3)
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Invalid Matrices
================

# Test Case 5
>>> matrix = "not a list"
>>> try:
	matrix_divided(matrix, 3)
	except Exception as e:
	str(e)
'matrix must be a matrix (list of lists) of integers/floats'

# Test Case 6
>>> matrix = None
>>> try:
	matrix_divided(matrix, 3)
	except Exception as e:
	str(e)
'matrix must be a matrix (list of lists) of integers/floats'

# Test Case 7
>>> matrix = []
>>> try:
	matrix_divided(matrix, 3)
	except Exception as e:
	str(e)
'matrix must be a matrix (list of lists) of integers/floats'

# Test Case 8
>>> matrix = [[]]
>>> matrix_divided(matrix, 3)
[[]]

# Test Case 9
>>> matrix = [1, 2, 3]
>>> try:
	matrix_divided(matrix, 3)
	except Exception as e:
	str(e)
'matrix must be a matrix (list of lists) of integers/floats'

# Test Case 10
>>> matrix = [
	[1, 2, 3],
	[4, "not a number", 6]
	]
>>> try:
	matrix_divided(matrix, 3)
	except Exception as e:
	str(e)
'matrix must be a matrix (list of lists) of integers/floats'

# Test Case 11
>>> matrix = [
	[1, 2, 3, 4],
	[5, 6, 7]
	]
>>> try:
	matrix_divided(matrix, 3)
	except Exception as e:
	str(e)
'Each row of the matrix must have the same size'

Invalid Divisors
================

# Test Case 12
>>> try:
	matrix_divided(matrix, "not a number")
	except Exception as e:
	str(e)
'divisor must be a number'

# Test Case 13
>>> try:
	matrix_divided(matrix, None)
	except Exception as e:
	str(e)
'divisor must be a number'

# Test Case 14
>>> try:
	matrix_divided(matrix, 0)
	except Exception as e:
	str(e)
'division by zero'
