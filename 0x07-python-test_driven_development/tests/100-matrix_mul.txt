# 100-matrix_mul.txt

How to Use 100-matrix_mul.py
----------------------------

This module defines a matrix multiplication function ``matrix_mul(m_a, m_b)``.

Usage
-----

``matrix_mul(...)``` returns the result of multiplying two matrices. For matrices `m_a` and `m_b`, this is equivalent to the matrix product.


    >>> matrix_mul = _import_('100-matrix_mul').matrix_mul
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]


    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

Both matrices should be lists of lists containing integers or floats.


    >>> matrix_mul([[1, 2], [3, 4]], [[1.0, 2.0], [3.0, 4.0]])
    [[7.0, 10.0], [15.0, 22.0]]

Non-integer and non-float values are not allowed.


    >>> matrix_mul([[1, '2'], [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

If either `m_a` or `m_b` is empty, a ValueError is raised:


    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

If either `m_a` or `m_b` is not a list of lists, a TypeError is raised:


    >>> matrix_mul([1, 2], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

If the number of columns in `m_a` is not equal to the number of rows in `m_b`, a ValueError is raised:


    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

The resulting matrix will have dimensions that depend on the sizes of the input matrices.


    >>> matrix_mul([[1, 2], [3, 4]], [[1], [2]])
    [[5], [11]]

Defaults
--------

If `m_b` is not provided, it is assumed to be the identity matrix:


    >>> matrix_mul([[1, 2], [3, 4]])
    [[1, 2], [3, 4]]
